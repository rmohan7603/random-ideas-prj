*npm init=>package name,entry point-server.js,MIT lisence
*npm i express
*Create server.js

const express = require('express');
const port=4040;
const app = express();
app.get('/',(req,res)=>{
    res.send({ message:'Hello World' });
});
app.listen(port, () => console.log(`Server running on port ${port}`));

*package.json=>scripts: start:node server.js (Add to scripts)
*npm start

*Initialize git repository

*npm i -D nodemon (Nodemon install as dev dependency)
*package.json=>scripts: dev:nodemon server.js (Add to scripts)

*req.params.id=>Content specified in endpoint
*req.body.keyName=>Content sent in req body

*Have an array of json values tempporarity, instead of DB
*Create basic GET, POST APIs with that.

*Add routes folder, create ideas.js file
const express = require("express");
const router = express.Router();
const ideas = [
  {
    id: 1,
    text: "First random content given",
    tag: "Technology",
    username: "TonyStark",
    date: "2022-01-02",
  },
];

//GET All ideas
router.get("/", (req, res) => {
  res.json({ success: true, data: ideas });
});

//GET Specific idea
router.get("/:id", (req, res) => {
  const idea = ideas.find((idea) => idea.id === +req.params.id);
  if (!idea) {
    return res
      .status(404)
      .json({ success: false, error: "Resource not found" });
  }
  res.json({ success: true, data: idea });
});

//POST Add idea
router.post("/", (req, res) => {
    const idea = {
        id: ideas.length+1,
        text: req.body.text,
        tag: req.body.tag,
        username: req.body.username,
        date: new Date().toISOString().slice(0,10),
    }
    ideas.push(idea);
  res.status(201).json({ success: true, data: idea });
});

//PUT Update idea
router.put("/:id", (req, res) => {
    const idea = ideas.find((idea) => idea.id === +req.params.id);
    if (!idea) {
      return res
        .status(404)
        .json({ success: false, error: "Resource not found" });
    }
    idea.text=req.body.text || idea.text;
    idea.tag=req.body.tag || idea.tag;

    res.json({ success: true, data: idea });
  });

//DELETE An idea
router.delete("/:id", (req, res) => {
    const idea = ideas.find((idea) => idea.id === +req.params.id);
    const index=ideas.indexOf(idea);
    if (index==-1) {
      return res
        .status(404)
        .json({ success: false, error: "Resource not found" });
    }
    ideas.splice(index,1);
    res.status(200).json({ success: true, data: {} });
  });

module.exports = router;
*In server.js file, add the routes
const ideasRouter = require('./routes/ideas');
app.use('/api/ideas',ideasRouter);

*Add body parser middleware in server.js
app.use(express.json());
app.use(express.urlencoded({ extended: false }));

*Add MONGO_URI to .env(PORT also)
*npm i dotenv mongoose
*Into server.js
require('dotenv').config();
const port = process.env.PORT || 4050;

*Add config folder, create db.js file
const moongose = require('mongoose');
const connectDB = async () => {
    const conn = await moongose.connect(process.env.MONGO_URI);
    console.log(`MongoDB Connected ${conn.connection.host}`)
}
moongose.set('strictQuery',true);
module.exports = connectDB;
*Add to server.js file
const connectDB = require('./config/db');
connectDB();

*Add models folder, create idea.js file
const mongoose = require('mongoose');
const IdeaSchema = new mongoose.Schema({
    text: {
        type: String,
        required: [true, 'Please add a text field!']
    },
    tag: {
        type: String
    },
    username: {
        type: String
    },
    date: {
        type: Date,
        default: Date.now
    }
});
module.exports = mongoose.model('Idea', IdeaSchema);
*Add to server.js file
const Idea = require('../models/Idea');

*Make changes to ideas.js i.e., db queries to api
const express = require("express");
const router = express.Router();
const Idea = require("../models/Idea");

//GET All ideas
router.get("/", async (req, res) => {
  try {
    const ideas = await Idea.find(); //Get ideas from db
    res.status(200).json({ success: true, data: ideas });
  } catch (error) {
    console.log(error);
    res.status(500).json({ success: false, error: "Something went wrong!" });
  }
});

//GET Specific idea
router.get("/:id", async (req, res) => {
  try {
    const idea = await Idea.findById(req.params.id);
    res.json({ success: true, data: idea });
  } catch (error) {
    console.log(error);
    res.status(500).json({ success: false, error: "Something went wrong!" });
  }
});

//POST Add idea
router.post("/", async (req, res) => {
  const idea = new Idea({
    text: req.body.text,
    tag: req.body.tag,
    username: req.body.username,
  });

  try {
    const savedIdea = await idea.save(); //Save to db
    res.status(201).json({ success: true, data: savedIdea });
  } catch (error) {
    console.log(error);
    res.status(500).json({ success: false, error: "Something went wrong!" });
  }
});

//PUT Update idea
router.put("/:id", async (req, res) => {
  try {
    const updatedIdea = await Idea.findByIdAndUpdate(
      req.params.id,
      {
        $set: {
          text: req.body.text,
          tag: req.body.tag
        }
      },
      { new: true }
    );
    res.json({ success: true, data: updatedIdea });
  } catch (error) {
    console.log(error);
    res.status(500).json({ success:false, error:'Something went wrong!' });
  }
});

//DELETE An idea
router.delete("/:id", async (req, res) => {
  try {
    await Idea.findByIdAndDelete(req.params.id);
    res.status(200).json({ success: true, data: {} });
  } catch (error) {
    console.log(error);
    res.status(500).json({ success:false, error:'Something went wrong!' });
  }
});
module.exports = router;